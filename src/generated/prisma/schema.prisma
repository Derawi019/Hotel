// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String     @id @default(cuid())
  name          String?
  email         String     @unique
  password      String
  emailVerified DateTime?
  image         String?
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
  bookings      Booking[]
  wishlists     Wishlist[]
}

model Booking {
  id        String   @id @default(cuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  hotelId   String
  hotel     Hotel    @relation(fields: [hotelId], references: [id])
  checkIn   DateTime
  checkOut  DateTime
  status    String   @default("pending") // pending, confirmed, cancelled
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Wishlist {
  id        String   @id @default(cuid())
  userId    String
  hotelId   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  hotel     Hotel    @relation(fields: [hotelId], references: [id], onDelete: Cascade)

  @@unique([userId, hotelId])
}

model Hotel {
  id          String     @id @default(cuid())
  name        String
  description String
  price       Float
  image       String
  location    String
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  wishlists   Wishlist[]
  bookings    Booking[]
}
